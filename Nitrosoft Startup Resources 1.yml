---
Description: Nitrosoft Resources
Parameters:
  KeyName:
    Description: Key Pair for EC2 Instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    
  subnet1:
    Description: Select first subnet
    Type: 'AWS::EC2::Subnet::Id'

  subnet2:
    Description: Select second subnet
    Type: 'AWS::EC2::Subnet::Id'

  VPC:
    Description: Select VPC
    Type: 'AWS::EC2::VPC::Id'

Resources:
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      #AvailabilityZone: us-east-1a
      ImageId: ami-0ed9277fb7eb570c9 
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId 
      KeyName: !Ref KeyName
      Tags:
        - 
          Key: 'Name'
          Value: 'Nitrosoft-webserver 1'
      SubnetId: !Ref subnet1
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hello from webserver 1</h1>" > /var/www/html/index.html

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      #AvailabilityZone: us-east-1b
      ImageId: ami-0ed9277fb7eb570c9 
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId 
      KeyName: !Ref KeyName
      Tags:
        - 
          Key: 'Name'
          Value: 'Nitrosoft-webserver 2'
      SubnetId: !Ref subnet2
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          echo "<h1>Hello from webserver 2</h1>" > /var/www/html/index.html
  
  EC2Instance3:
    Type: AWS::EC2::Instance
    Properties:
      #AvailabilityZone: us-east-1b
      ImageId: ami-0ed9277fb7eb570c9 
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId 
      KeyName: !Ref KeyName
      Tags:
        - 
          Key: 'Name'
          Value: 'Nitrosoft webserver 3'
      SubnetId: !Ref subnet1
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hello from webserver 3</h1>" > /var/www/html/index.html

  EC2Instance4:
    Type: AWS::EC2::Instance
    Properties:
      #Database Server
      ImageId: ami-0ed9277fb7eb570c9 
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId 
      KeyName: !Ref KeyName
      Tags:
        - 
          Key: 'Name'
          Value: 'Nitrosoft Database'
      SubnetId: !Ref subnet1
          
  # security group
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: new security group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  # Load Balancer for EC2
  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      Targets:
      - Id: !Ref EC2Instance1
        Port: 80
      - Id: !Ref EC2Instance2
        Port: 80
      - Id: !Ref EC2Instance3
        Port: 80
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
      - !Ref subnet1
      - !Ref subnet2
      SecurityGroups:
        - !GetAtt ELBSecurityGroup.GroupId 


  s3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: nitrosoft-cloudtrail-bucket-0101
      Tags:
        - Key: Name
          Value: nitrosoft-cloudtrail-bucket
