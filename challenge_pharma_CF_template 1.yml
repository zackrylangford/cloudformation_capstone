AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for challenge pharma

Parameters:
  KeyName:
    Description: Key Pair for EC2
    Type: 'AWS::EC2::KeyPair::KeyName'
    
  subnet1:
    Description: Select first subnet
    Type: 'AWS::EC2::Subnet::Id'

  subnet2:
    Description: Select second subnet
    Type: 'AWS::EC2::Subnet::Id'

  VPC:
    Description: Select VPC
    Type: 'AWS::EC2::VPC::Id'

Resources: 
  webserver1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      ImageId: ami-026b57f3c383c2eec
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId
      SubnetId: !Ref subnet2
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo yum update -y
        sudo yum install -y httpd
        sudo systemctl start httpd
        sudo systemctl enable httpd
        echo "<h1>This is a website for Challenge Pharma. zone us-east-1b </h1>" > /var/www/html/index.html 
      Tags:
        - Key: Name
          Value: Challenge-Pharma-Webserver
  webserver2:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      ImageId: ami-026b57f3c383c2eec
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId
      SubnetId: !Ref subnet1
      Tags:
        - Key: Name
          Value: Challenge-Pharma-Memcached-App

# Security Groups

  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for instances
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  # Load Balancer for EC2
  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      Targets:
      - Id: !Ref webserver1
        Port: 80
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
      - !Ref subnet1
      - !Ref subnet2
      SecurityGroups:
        - !GetAtt ELBSecurityGroup.GroupId 

  NewVolume1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 30
      AvailabilityZone: !GetAtt webserver1.AvailabilityZone
      Tags:
        - Key: Name
          Value: EBS for Webserver
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref webserver1
      VolumeId: !Ref NewVolume1
      Device: /dev/sdh

  NewVolume2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 30
      AvailabilityZone: !GetAtt webserver2.AvailabilityZone
      Tags:
        - Key: Name
          Value: EBS for MemApp
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref webserver2
      VolumeId: !Ref NewVolume2
      Device: /dev/sdh


  s3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: challengepharmaceuticals3bucket01 
      Tags:
        - Key: Name
          Value: Challenge-Pharm-Bucket